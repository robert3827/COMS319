function AND-OR-GRAPH-SEARCH(problem) returns a conditional plan, or failure 
    OR-SEARCH(problem.INITIAL-STATE, problem. [])
    reached = [problem.INITIAL-State] //reached nodes

function OR-SEARCH(state, problem, path) returns a conditional plan, or failure 
    if problem.GOAL-TEST(state) then return the empty plan
    if state is on path then return failure 
    for each action in problem.ACTIONS(state) do
        plan = AND-SEARCH(RESULTS(state, action), problem,[state path])
        if plan failure then return plan.prepend[action]
    return failure

function AND-SEARCH(states,problem.path) returns a conditional plan, or failure
    for each s in states do 
        plan[i] = OR-SEARCHES problem, path
        if plan[i] failure then return failure

    return if s[i], then plan[1], else if s[2] then plan[2], else ... if s[n-1] then plan[n-1] else plan[n]

Figure 4.11 An algorithms for searching AND-OR graphs generated by nondeterministic environments. It returns a conditional plan that reaches a goal state in all circumstances. 
(The notation refers to the list formed by adding object to the front of list.)